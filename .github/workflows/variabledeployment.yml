name: 'Terraform'

#on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: "4e59db77-b116-4fe7-9c8d-575cbd74037a"
      ARM_CLIENT_SECRET: "Xv9QJunO8o-v1eh2h1KwaXpo1QN9p9aqbi"
      ARM_SUBSCRIPTION_ID: "e56c7cda-bc0c-4681-bd0a-c37f43a7ccf0"
      ARM_TENANT_ID: "c9560048-3c29-4d2f-b39d-70b434bb29cc"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Connection to our Azure subscription  
   # - name: login into azure account
    #  uses: azure/login@v1
     # with:
      #  creds: ${{ secrets.SPCREDENTIALS}}
      
      
      

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
